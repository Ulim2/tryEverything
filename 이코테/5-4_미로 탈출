# bfs 미로 탈출 
from collections import deque

n, m = map(int, input().split())

graph = []
for i in range(n):
    graph.append(list(map(int, input())))

# 상하좌우
dx = [1, -1, 0, 0]
dy = [0, 0, 1, -1]

# BFS 소스코드 구현
def bfs(x, y):
    q = deque([(x, y)])

    while q:
        x, y = q.popleft()

        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            
            # 좌표값 벗어나면 끝
            if nx < 0 or ny < 0 or nx >= n or ny >= m:
                continue

            # 좌표에 괴물있으면 끝
            if graph[nx][ny] == 0:
                continue

            # 해당 노드 첫 방문 시에만 최단 거리 기록
            if graph[nx][ny] == 1:
                q.append((nx, ny))
                graph[nx][ny] = graph[x][y] + 1
            
    return graph[n - 1][m - 1]

# 0,0 좌표에서 시작
print(bfs(0, 0))

